Insight Database
================

Prefix is OII

View across all models: OII_metrics_A
- per model and flow instance: all milestones and timings for milestone; no business indicators

SELECT A1.EVENT_ID AS EVENT_ID, A1.FLOW_CORRELATION_ID AS FLOW_CORRELATION_ID, A1.BUSINESS_MODEL_ID AS BUSINESS_MODEL_ID, A1.MILESTONE_ID AS MILESTONE_ID, A1.EXECUTION_TIME AS EXECUTION_TIME, A1.IDENTIFIER AS IDENTIFIER , A1.CONNECTION_ID AS CONNECTION_ID, A2.MILESTONE_NAME AS MILESTONE_NAME, A2.IS_TERMINAL_MILESTONE AS IS_TERMINAL_MILESTONE, A2.IS_ERROR_MILESTONE AS IS_ERROR_MILESTONE, A2.IS_INITIAL_MILESTONE AS IS_INITIAL_MILESTONE, A3.MODEL_NAME AS MODEL_NAME, A4.BASE_IDENTIFIER AS BASE_IDENTIFIER, A5.INSTANCE_STATE AS INSTANCE_STATE, A5.INSTANCE_START_TIME AS INSTANCE_START_TIME, A5.INSTANCE_COMPLETION_TIME AS INSTANCE_COMPLETION_TIME, A5.STATE_UPDATE_TIME AS STATE_UPDATE_TIME, LAST_VALUE(A1.EVENT_ID)  OVER (PARTITION BY A4.BASE_IDENTIFIER,A1.BUSINESS_MODEL_ID ORDER BY A1.EXECUTION_TIME,A1.EVENT_ID RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as LAST_MILESTONE_ID, CASE  WHEN ( (A5.INSTANCE_COMPLETION_TIME IS NULL ) ) THEN  ( EXTRACT (DAY FROM (LOCALTIMESTAMP-A5.INSTANCE_START_TIME))*24*60 +EXTRACT (HOUR FROM (LOCALTIMESTAMP-A5.INSTANCE_START_TIME))*60  +EXTRACT (MINUTE FROM (LOCALTIMESTAMP-A5.INSTANCE_START_TIME)) ) ELSE ( EXTRACT (DAY FROM (A5.INSTANCE_COMPLETION_TIME-INSTANCE_START_TIME))*24*60 +EXTRACT (HOUR FROM (A5.INSTANCE_COMPLETION_TIME-A5.INSTANCE_START_TIME))*60 +EXTRACT (MINUTE FROM (A5.INSTANCE_COMPLETION_TIME-A5.INSTANCE_START_TIME)) )  END  AS INSTANCE_EXEC_DURATION 
FROM OII_BASE_METRICS_A A1 
INNER JOIN 
OII_MILESTONE_A A2 
ON A1.MILESTONE_ID=A2.MILESTONE_ID 
AND A1.BUSINESS_MODEL_ID=A2.BUSINESS_MODEL_ID 
INNER JOIN 
OII_MODEL_A A3 
ON A1.BUSINESS_MODEL_ID=A3.MODEL_ID 
INNER JOIN 
OII_BASE_IDENTIFIER_MAPPING_A A4 
ON A1.IDENTIFIER = A4.IDENTIFIER AND A1.BUSINESS_MODEL_ID=A4.BUSINESS_MODEL_ID 
INNER 
JOIN OII_INSTANCE_A A5 
ON A5.BASE_IDENTIFIER=A4.BASE_IDENTIFIER AND A5.BUSINESS_MODEL_ID=A4.BUSINESS_MODEL_ID

also across all models: OII_BASE_METRICS_TIMINGS_VIEW
- per model and flow instance: all milestones and timings before and after milestone; no business indicators

select  EVENT_ID , FLOW_CORRELATION_ID, BUSINESS_MODEL_ID, MILESTONE_ID, EXECUTION_TIME,  MILESTONE_NAME, IS_TERMINAL_MILESTONE,  IS_ERROR_MILESTONE, IS_INITIAL_MILESTONE, MODEL_NAME, INSTANCE_STATE,  INSTANCE_START_TIME, INSTANCE_COMPLETION_TIME, STATE_UPDATE_TIME, BASE_IDENTIFIER, IDENTIFIER,  CASE  WHEN ( (INSTANCE_COMPLETION_TIME IS NULL ) ) THEN  ( EXTRACT (DAY FROM (LOCALTIMESTAMP-INSTANCE_START_TIME))*24*60  +EXTRACT (HOUR FROM (LOCALTIMESTAMP-INSTANCE_START_TIME))*60  +EXTRACT (MINUTE FROM (LOCALTIMESTAMP-INSTANCE_START_TIME)) )  ELSE ( EXTRACT (DAY FROM (INSTANCE_COMPLETION_TIME-INSTANCE_START_TIME))*24*60  +EXTRACT (HOUR FROM (INSTANCE_COMPLETION_TIME-INSTANCE_START_TIME))*60  +EXTRACT (MINUTE FROM (INSTANCE_COMPLETION_TIME-INSTANCE_START_TIME)) ) END  AS INSTANCE_EXEC_DURATION  , LAG (MILESTONE_ID  , 1) over (PARTITION BY BUSINESS_MODEL_ID,BASE_IDENTIFIER ORDER BY EXECUTION_TIME, EVENT_ID) AS PREV_MS_ID , LAG (EXECUTION_TIME, 1) over (PARTITION BY BUSINESS_MODEL_ID,BASE_IDENTIFIER ORDER BY EXECUTION_TIME, EVENT_ID) AS PREV_EXEC_TIME , LEAD(MILESTONE_ID  , 1) over (PARTITION BY BUSINESS_MODEL_ID,BASE_IDENTIFIER ORDER BY EXECUTION_TIME, EVENT_ID) AS NEXT_MS_ID , LEAD(EXECUTION_TIME, 1) over (PARTITION BY BUSINESS_MODEL_ID,BASE_IDENTIFIER ORDER BY EXECUTION_TIME, EVENT_ID) AS NEXT_EXEC_TIME from OII_METRICS_A  ORDER BY BASE_IDENTIFIER, EXECUTION_TIME, EVENT_ID


View is created for each model:  for example select * from OII_ONLINESHOPPINGAPP1_MET_A for model ONLINESHOPPINGAPP1_MET_A
This view contains columns for each business indicator - measure, dimension, 
An entry per instance, per milestone - group by flow_correlation_id to aggregate over a specific instance


SELECT A1.EVENT_ID AS EVENT_ID, A1.FLOW_CORRELATION_ID AS FLOW_CORRELATION_ID, A1.BUSINESS_MODEL_ID AS BUSINESS_MODEL_ID, A1.MILESTONE_ID AS MILESTONE_ID, A1.EXECUTION_TIME AS EXECUTION_TIME, A1.CONNECTION_ID, A1.IDENTIFIER AS IDENTIFIER, A3.MILESTONE_NAME AS MILESTONE_NAME, A3.IS_TERMINAL_MILESTONE AS IS_TERMINAL_MILESTONE, A3.IS_ERROR_MILESTONE AS IS_ERROR_MILESTONE, A3.IS_INITIAL_MILESTONE AS IS_INITIAL_MILESTONE, A4.MODEL_NAME AS MODEL_NAME, A5.INSTANCE_STATE AS INSTANCE_STATE, A5.INSTANCE_START_TIME AS INSTANCE_START_TIME, A5.INSTANCE_COMPLETION_TIME AS INSTANCE_COMPLETION_TIME, A5.STATE_UPDATE_TIME AS STATE_UPDATE_TIME, A5.BASE_IDENTIFIER AS BASE_IDENTIFIER, CASE  WHEN ( (A5.INSTANCE_COMPLETION_TIME IS NULL ) ) THEN  ( EXTRACT (DAY FROM (LOCALTIMESTAMP-A5.INSTANCE_START_TIME))*24*60 +EXTRACT (HOUR FROM (LOCALTIMESTAMP-A5.INSTANCE_START_TIME))*60  +EXTRACT (MINUTE FROM (LOCALTIMESTAMP-A5.INSTANCE_START_TIME)) ) ELSE ( EXTRACT (DAY FROM (A5.INSTANCE_COMPLETION_TIME-INSTANCE_START_TIME))*24*60 +EXTRACT (HOUR FROM (A5.INSTANCE_COMPLETION_TIME-A5.INSTANCE_START_TIME))*60 +EXTRACT (MINUTE FROM (A5.INSTANCE_COMPLETION_TIME-A5.INSTANCE_START_TIME)) )  END  AS INSTANCE_EXEC_DURATION  , A5.OrderNumber AS OrderNumber , A5.Model AS Model , A5.ShippingState AS ShippingState , A5.ReturnReason AS ReturnReason , A2.UnitPrice AS UnitPrice , A2.NumberofItems AS NumberofItems , A2.TotalOrderAmount AS TotalOrderAmount 
FROM OII_OnlineShoppingApp1_BMT_A A1 
LEFT OUTER JOIN OII_OnlineShoppingApp1_FAC_A A2 
ON A1.EVENT_ID = A2.EVENT_ID 
INNER JOIN 
OII_MODEL_A A4 
ON A1.BUSINESS_MODEL_ID = A4.MODEL_ID 
INNER JOIN OII_MILESTONE_A A3 
ON A1.BUSINESS_MODEL_ID = A3.BUSINESS_MODEL_ID 
AND A1.MILESTONE_ID = A3.MILESTONE_ID 
INNER JOIN OII_OnlineShoppingApp1_IM_A A6 
ON A1.IDENTIFIER = A6.IDENTIFIER 
AND A1.BUSINESS_MODEL_ID = A6.BUSINESS_MODEL_ID 
INNER JOIN 
OII_OnlineShoppingApp1_INS_A A5 
ON A5.BASE_IDENTIFIER = A6.BASE_IDENTIFIER 
AND A5.BUSINESS_MODEL_ID = A6.BUSINESS_MODEL_ID

